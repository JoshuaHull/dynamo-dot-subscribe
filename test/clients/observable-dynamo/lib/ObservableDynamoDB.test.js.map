{"version":3,"file":"ObservableDynamoDB.test.js","sourceRoot":"","sources":["../src/ObservableDynamoDB.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { ObservableDynamoDB } from '@dynamo-dot-subscribe/observable-dynamo';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\nconst TEST_TABLE_NAME = 'ObservableDynamoDBTests';\r\n\r\nlet client: ObservableDynamoDB;\r\n\r\nbeforeAll(done => {\r\n  client = new ObservableDynamoDB({\r\n    region: 'ap-southeast-2',\r\n    endpoint: 'http://localhost:8000'\r\n  });\r\n\r\n  client.listTables({}).pipe(\r\n    map(output => output.TableNames),\r\n    mergeMap(tableNames => {\r\n      if (tableNames?.includes(TEST_TABLE_NAME)) {\r\n        done();\r\n        return EMPTY;\r\n      }\r\n\r\n      return client.createTable({\r\n        TableName: TEST_TABLE_NAME,\r\n        AttributeDefinitions: [{\r\n          AttributeName: 'id',\r\n          AttributeType: 'S',\r\n        }],\r\n        KeySchema: [{\r\n          AttributeName: 'id',\r\n          KeyType: 'HASH',\r\n        }],\r\n        ProvisionedThroughput: {\r\n          ReadCapacityUnits: 5,\r\n          WriteCapacityUnits: 5,\r\n        },\r\n      });\r\n    }),\r\n  ).subscribe(_ => done());\r\n});\r\n\r\nafterAll(done => {\r\n  client.listTables({}).pipe(\r\n    map(output => output.TableNames),\r\n    mergeMap(tableNames => {\r\n      if (tableNames?.includes(TEST_TABLE_NAME)) {\r\n        done();\r\n        return EMPTY;\r\n      }\r\n\r\n      return client.deleteTable({\r\n        TableName: TEST_TABLE_NAME,\r\n      });\r\n    }),\r\n  ).subscribe(_ => done());\r\n})\r\n\r\ndescribe('PutItemCommand tests', () => {\r\n  test('Should successfully put item', done => {\r\n    client.putItem({\r\n      TableName: TEST_TABLE_NAME,\r\n      Item: {\r\n        id: {\r\n          S: 'PutItemCommand',\r\n        },\r\n        value: {\r\n          S: 'hello',\r\n        },\r\n      },\r\n    }).subscribe(output => {\r\n      expect(output).not.toBeNull();\r\n      expect(output.$metadata).not.toBeNull();\r\n      expect(output.$metadata.httpStatusCode).toBe(200);\r\n      done();\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('GetItemCommand tests', () => {\r\n  let ids: { [key: string]: string } = {};\r\n  let values: { [key: string]: string } = {};\r\n\r\n  beforeEach(done => {\r\n    ids['1'] = Math.random().toString(36).substr(0, 10);\r\n    values['1'] = 'hello';\r\n\r\n    client.putItem({\r\n      TableName: TEST_TABLE_NAME,\r\n      Item: {\r\n        id: {\r\n          S: ids['1'],\r\n        },\r\n        value: {\r\n          S: values['1']\r\n        },\r\n      },\r\n    }).subscribe(_ => done());\r\n  });\r\n\r\n  test('Should successfully get item', done => {\r\n    client.getItem({\r\n      TableName: TEST_TABLE_NAME,\r\n      Key: {\r\n        id: {\r\n          S: ids['1'],\r\n        },\r\n      },\r\n    }).subscribe(output => {\r\n      expect(output).not.toBeNull();\r\n      expect(output.Item).not.toBeNull();\r\n      expect(output.Item?.value).not.toBeNull();\r\n      expect(output.Item?.value.S).toBe(values['1']);\r\n      done();\r\n    });\r\n  });\r\n});\r\n"]}