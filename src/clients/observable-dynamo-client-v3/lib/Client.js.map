{"version":3,"file":"Client.js","sourceRoot":"","sources":["../src/Client.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;EAmBE;;;AAGF,+BAAwC;AACxC,0DAA4D;AAG5D,MAAa,MAAM;IAQjB,YAAY,MAAoC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,sBAAQ,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,CACF,OAAgG,EAChG,OAAwB;QAExB,OAAO,WAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAwB,OAAO,EAAE,OAAO,CAAC,CAAC,CAAA;IACzE,CAAC;IAED,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAAA,CAAC;CACH;AAtBD,wBAsBC","sourcesContent":["/*\r\n  GPL 3.0 License\r\n\r\n  ObservableDynamoDB - An Observable DynamoDB Client\r\n\r\n  Copyright (C) 2020 Joshua Hull\r\n\r\n  This program is free software: you can redistribute it and/or modify\r\n  it under the terms of the GNU General Public License as published by\r\n  the Free Software Foundation, either version 3 of the License, or\r\n  (at your option) any later version.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nimport { DynamoDBClientResolvedConfig } from '@aws-sdk/client-dynamodb';\r\nimport { from, Observable } from \"rxjs\";\r\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\r\nimport { Command, MetadataBearer } from '@aws-sdk/types';\r\n\r\nexport class Client<\r\n  HandlerOptions,\r\n  ClientInput extends object,\r\n  ClientOutput extends MetadataBearer\r\n>\r\n{\r\n  private _client: __Client<HandlerOptions, ClientInput, ClientOutput, DynamoDBClientResolvedConfig>;\r\n\r\n  constructor(config: DynamoDBClientResolvedConfig) {\r\n    this._client = new __Client(config);\r\n  }\r\n\r\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\r\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, DynamoDBClientResolvedConfig>,\r\n    options?: HandlerOptions\r\n  ): Observable<OutputType> {\r\n    return from(this._client.send<InputType, OutputType>(command, options))\r\n  }\r\n\r\n  destroy(): void {\r\n    this._client.destroy();\r\n  };\r\n}\r\n"]}