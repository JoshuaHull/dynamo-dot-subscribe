{"version":3,"file":"State.js","sourceRoot":"","sources":["../src/State.ts"],"names":[],"mappings":";;;AAAA,+BAAuC;AAIvC,MAAa,KAAK;IAIhB,YAAY,KAAe;QACzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAEM,UAAU,CAAC,IAAO;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEM,UAAU,CAAC,IAAO;QACvB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,OAAO,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,sBAAe,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;CACF;AAtBD,sBAsBC","sourcesContent":["import { BehaviorSubject } from 'rxjs';\n\nexport type ToKey<T> = (item: T) => string;\n\nexport class State<T> {\n  private _subjects: { [key: string]: BehaviorSubject<T> | undefined };\n  private _toKey: (item: T) => string;\n\n  constructor(toKey: ToKey<T>) {\n    this._subjects = {};\n    this._toKey = toKey;\n  }\n\n  public getSubject(item: T): BehaviorSubject<T> | undefined {\n    return this._subjects[this._toKey(item)];\n  }\n\n  public setSubject(item: T): BehaviorSubject<T> {\n    const key = this._toKey(item);\n    const subject = this._subjects[key];\n    if (subject) {\n      subject.next(item);\n      return subject;\n    }\n    return this._subjects[key] = new BehaviorSubject(item);\n  }\n}\n"]}